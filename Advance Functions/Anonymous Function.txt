1. Functions in js are first-class citizens; they can be assigned to variables.
2. Functions defined without a name, often assigned to a variable.
3. Anonymous Functions can be properties in objects
4. can be passed as arguments to other Functions.
5. Invoked using () after the function name or variable.
6. console.log(myfunction) and typeof myfunction will both indicate it's function.

For example:
let sum = function(num1, num2){
    return num1 + num2;
}


// Arrow Functions
1. A concise way to write Anonymous Functions.
2. For single arguments: Round brackets optionl.
3. For single Line: curly brackets and return optionl.
4. Often used when passing functions as arguments.

Example:
let sum = function(num1, num2) {
    return num1 + num2;
}

let sum1 = (num1, num2) =>{
    return num1 + num2;
}

let sum2 = (num1, num2) => num1 + num2;
let square = num => num * num;


// setTimeout & setInterval
1. Functions for executing code asynchronously after a delay.
2. setTimeout runs once; setInterval runs repeatedly
3. setTimeout:
    . Syntax: setTimeout(function, time)
    . Cancel: clearTimeout(timerID)
4. setInterval:
    . Syntax: setInterval(function, time)
    . Cancel: clearInterval(intervalId)